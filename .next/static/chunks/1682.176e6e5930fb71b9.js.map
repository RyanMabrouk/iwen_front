{"version":3,"file":"static/chunks/1682.176e6e5930fb71b9.js","mappings":"weACe,SAASA,EAAUC,CAMjC,KANiC,CAChCC,KAAAA,CAAI,CACJC,UAAAA,CAAS,CAIV,CANiCF,EAOhC,MAAO,GAAAG,EAAAC,GAAA,EAACC,MAAAA,CAAIC,MAAM,6BAA6BC,MAAON,EAAMO,OAAQP,EAAMQ,QAAQ,YAAYC,KAAK,OAAOR,UAAWA,EAAWS,sBAAoB,MAAMC,wBAAsB,YAAYC,0BAAwB,yBAChN,GAAAV,EAAAC,GAAA,EAACU,OAAAA,CAAKC,EAAE,oXAAoXL,KAAK,eAAeC,sBAAoB,OAAOE,0BAAwB,mBAEzc,8HCFe,SAASG,EAAiBhB,CAcxC,KAdwC,CACvCiB,KAAAA,CAAI,CACJC,KAAAA,CAAI,CACJhB,UAAAA,CAAS,CACTiB,QAAAA,CAAO,CACPC,cAAAA,CAAa,CACbC,SAAAA,CAAQ,CAQT,CAdwCrB,EAejC,CAACsB,EAAMC,EAAQ,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAASJ,GAAiB,IAC5CK,EAAeC,CAAAA,EAAAA,EAAAA,MAAAA,EAAuB,MACtC,CAACC,EAAOC,EAAS,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAASP,GACnCY,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMC,EAAqB,IACrBL,EAAaM,OAAO,EAAI,CAACN,EAAaM,OAAO,CAACC,QAAQ,CAACC,EAAMC,MAAM,GACrEX,EAAQ,GAEZ,EACA,GAAIY,QAAUC,SAMZ,OALId,EACFc,SAASC,gBAAgB,CAAC,YAAaP,GAEvCM,SAASE,mBAAmB,CAAC,YAAaR,GAErC,KACLM,SAASE,mBAAmB,CAAC,YAAaR,EAC5C,CAEJ,EAAG,CAACR,EAAK,EACT,IAAMiB,EAAe,IACnBX,EAASY,EAAKC,IAAI,EAClBlB,EAAQ,IACJF,GACFA,EAASmB,EAAKE,EAAE,CAEpB,EAIA,MAAO,GAAAvC,EAAAwC,IAAA,EAACC,MAAAA,CAAIC,IAAKpB,EAAcvB,UAAW4C,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,mIAAoI5C,GAAY6C,QAHtK,KACrBxB,EAAQyB,GAAQ,CAACA,EACnB,EACsNpC,wBAAsB,mBAAmBC,0BAAwB,iCACnR,GAAAV,EAAAC,GAAA,EAACwC,MAAAA,CAAI1C,UAAU,gBAAQgB,IACvB,GAAAf,EAAAwC,IAAA,EAACC,MAAAA,CAAI1C,UAAW,sCACd,GAAAC,EAAAC,GAAA,EAAC6C,OAAAA,CAAK/C,UAAU,mBAAWyB,IAC3B,GAAAxB,EAAAC,GAAA,EAACL,EAAAA,CAASA,CAAAA,CAACE,KAAM,GAAIU,sBAAoB,YAAYE,0BAAwB,4BAE9ES,GAAQ,GAAAnB,EAAAC,GAAA,EAACwC,MAAAA,CAAI1C,UAAU,kIAAkIgD,YAAaC,GAAKA,EAAEC,eAAe,YACxLjC,GAAWA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASkC,GAAG,CAACb,GAAQ,GAAArC,EAAAC,GAAA,EAACwC,MAAAA,CAAkB1C,UAAU,kCAAkC6C,QAASI,IAC3GA,EAAEC,eAAe,GACjBb,EAAaC,EACf,WACWA,EAAKC,IAAI,EAJ2BD,EAAKE,EAAE,QAQ5D","sources":["webpack://_N_E/./src/components/icons/ArrowDown.tsx","webpack://_N_E/./src/components/main/SelectWithBorder.tsx"],"sourcesContent":["import React from \"react\";\nexport default function ArrowDown({\n  size,\n  className\n}: {\n  size: number;\n  className?: string;\n}) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" className={className} data-sentry-element=\"svg\" data-sentry-component=\"ArrowDown\" data-sentry-source-file=\"ArrowDown.tsx\">\n      <path d=\"M12 16.7999C11.3 16.7999 10.6 16.5299 10.07 15.9999L3.55002 9.47989C3.26002 9.18989 3.26002 8.70989 3.55002 8.41989C3.84002 8.12989 4.32002 8.12989 4.61002 8.41989L11.13 14.9399C11.61 15.4199 12.39 15.4199 12.87 14.9399L19.39 8.41989C19.68 8.12989 20.16 8.12989 20.45 8.41989C20.74 8.70989 20.74 9.18989 20.45 9.47989L13.93 15.9999C13.4 16.5299 12.7 16.7999 12 16.7999Z\" fill=\"currentColor\" data-sentry-element=\"path\" data-sentry-source-file=\"ArrowDown.tsx\" />\n    </svg>;\n}","\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ArrowDown from \"../icons/ArrowDown\";\nimport { cn } from \"@/lib/utils\";\ntype Item = {\n  id: string | null;\n  name: string;\n};\nexport default function SelectWithBorder({\n  text,\n  icon,\n  className,\n  content,\n  defaultStatus,\n  onChange\n}: {\n  text: string;\n  icon?: React.ReactNode;\n  className?: string;\n  content?: Item[];\n  defaultStatus?: boolean;\n  onChange?: (value: string | null) => void;\n}) {\n  const [open, setOpen] = useState(defaultStatus || false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [label, setLabel] = useState(text);\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\n        setOpen(false);\n      }\n    };\n    if (window && document) {\n      if (open) {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n      } else {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      }\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [open]);\n  const handleSelect = (item: Item) => {\n    setLabel(item.name);\n    setOpen(false);\n    if (onChange) {\n      onChange(item.id);\n    }\n  };\n  const toggleDropdown = () => {\n    setOpen(prev => !prev);\n  };\n  return <div ref={containerRef} className={cn(\"relative z-50 flex min-w-[240px] cursor-pointer items-center justify-between rounded-xl border border-black bg-white p-3 text-xl\", className)} onClick={toggleDropdown} data-sentry-component=\"SelectWithBorder\" data-sentry-source-file=\"SelectWithBorder.tsx\">\n      <div className=\"ml-2\">{icon}</div>\n      <div className={\"flex items-center gap-2.5\"}>\n        <span className=\"text-lg\">{label}</span>\n        <ArrowDown size={24} data-sentry-element=\"ArrowDown\" data-sentry-source-file=\"SelectWithBorder.tsx\" />\n      </div>\n      {open && <div className=\"absolute left-0 top-16 max-h-60 w-full overflow-y-auto overflow-x-hidden rounded-lg border border-black bg-white py-2 shadow-xl\" onMouseDown={e => e.stopPropagation()}>\n          {content && content?.map(item => <div key={item.id} className=\"p-2.5 text-lg hover:bg-gray-100\" onClick={e => {\n        e.stopPropagation();\n        handleSelect(item);\n      }}>\n                {item.name}\n              </div>)}\n        </div>}\n    </div>;\n}"],"names":["ArrowDown","param","size","className","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","svg","xmlns","width","height","viewBox","fill","data-sentry-element","data-sentry-component","data-sentry-source-file","path","d","SelectWithBorder","text","icon","content","defaultStatus","onChange","open","setOpen","useState","containerRef","useRef","label","setLabel","useEffect","handleClickOutside","current","contains","event","target","window","document","addEventListener","removeEventListener","handleSelect","item","name","id","jsxs","div","ref","cn","onClick","prev","span","onMouseDown","e","stopPropagation","map"],"sourceRoot":""}