{"version":3,"file":"static/chunks/4129.6b44f50079b1d7e7.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/next@14.2.20_@babel+core@7.26.0_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/navigation.js","webpack://_N_E/./src/components/Header/HeaderLoginButton.tsx","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/mutation.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/mutationObserver.js","webpack://_N_E/../../src/useMutation.ts"],"sourcesContent":["export * from \"../client/components/navigation\";\n\n//# sourceMappingURL=navigation.js.map","\"use client\";\n\nimport Image from \"next/image\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PrimaryButton from \"../main/buttons/PrimaryButton\";\nimport useCurrentUser from \"@/hooks/data/user/useCurrentUser\";\nimport Link from \"next/link\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport signOut from \"@/actions/auth/signout\";\nimport { useRouter } from \"next/navigation\"; // Client-side navigation\n\nexport default function HeaderLoginButton() {\n  const {\n    data: user\n  } = useCurrentUser();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const router = useRouter(); // Initialize router\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  const queryClient = useQueryClient();\n  const {\n    mutate: signOutUser\n  } = useMutation({\n    mutationFn: async () => {\n      await signOut();\n      setIsDropdownOpen(false);\n      await queryClient.invalidateQueries(); // Invalidate all queries\n      router.push(\"/login\"); // Client-side navigation\n    },\n    onError: error => {\n      // Optional: Handle sign-out errors here\n      console.error(\"Error signing out:\", error);\n    }\n  });\n  const handleLogout = () => {\n    signOutUser();\n  };\n  const handleClickOutside = (event: MouseEvent) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n      setIsDropdownOpen(false);\n    }\n  };\n  useEffect(() => {\n    if (window && document) {\n      if (isDropdownOpen) {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n      } else {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      }\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [isDropdownOpen]);\n  if (user?.data) {\n    return <div className=\"relative\" ref={dropdownRef}>\n        <button onClick={toggleDropdown} className=\"flex h-[3rem] w-fit min-w-[50px] items-center justify-center rounded-lg bg-white shadow-md\">\n          <Image className=\"h-[3rem] rounded-lg\" src={user.data.avatar ? user.data.avatar : \"/default_avatar.png\"} width={50} height={50} alt=\"User Avatar\" />\n        </button>\n        {isDropdownOpen && <div className=\"absolute right-0 z-[1000] mt-2 w-32 origin-top scale-100 transform rounded-md bg-white font-medium opacity-100 shadow-lg transition duration-200 ease-out\">\n            <Link href=\"/profile\" onClick={() => {\n          setIsDropdownOpen(false);\n        }}>\n              <span className=\"block w-full cursor-pointer rounded-t-md px-4 py-2 text-gray-800 transition hover:bg-gray-100\">\n                حسابي\n              </span>\n            </Link>\n            <button onClick={handleLogout} className=\"w-full cursor-pointer rounded-b-md px-4 py-2 text-right text-gray-800 transition hover:bg-gray-100\">\n              خروج\n            </button>\n          </div>}\n      </div>;\n  }\n  return <Link href=\"/login\" data-sentry-element=\"Link\" data-sentry-component=\"HeaderLoginButton\" data-sentry-source-file=\"HeaderLoginButton.tsx\">\n      <PrimaryButton className=\"w-full min-w-[150px]\" size=\"md\" data-sentry-element=\"PrimaryButton\" data-sentry-source-file=\"HeaderLoginButton.tsx\">\n        انشاء حساب\n      </PrimaryButton>\n    </Link>;\n}","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":["HeaderLoginButton","data","user","useCurrentUser","isDropdownOpen","setIsDropdownOpen","useState","dropdownRef","useRef","router","useRouter","queryClient","useQueryClient","mutate","signOutUser","useMutation","mutationFn","signOut","invalidateQueries","push","onError","error","handleClickOutside","current","contains","event","target","useEffect","window","document","addEventListener","removeEventListener","jsx_runtime","jsxs","div","className","ref","jsx","button","onClick","Image","src","avatar","width","height","alt","Link","href","span","data-sentry-element","data-sentry-component","data-sentry-source-file","PrimaryButton","size","Mutation","_removable_js__WEBPACK_IMPORTED_MODULE_0__","F","observers","mutationCache","retryer","config","mutationId","state","getDefaultState","setOptions","options","scheduleGc","updateGcTime","gcTime","meta","addObserver","observer","includes","clearGcTimeout","notify","type","mutation","removeObserver","filter","x","optionalRemove","length","status","remove","continue","execute","variables","_retryer_js__WEBPACK_IMPORTED_MODULE_1__","Mz","fn","Promise","reject","onFail","failureCount","dispatch","onPause","onContinue","retry","retryDelay","networkMode","canRun","restored","isPaused","canStart","onMutate","context","start","onSuccess","onSettled","runNext","action","reducer","failureReason","submittedAt","Date","now","_notifyManager_js__WEBPACK_IMPORTED_MODULE_2__","V","batch","forEach","onMutationUpdate","MutationObserver","subscribable","l","client","currentResult","currentMutation","mutateOptions","bindMethods","updateResult","bind","reset","prevOptions","defaultMutationOptions","utils","VS","getMutationCache","mutationKey","Ym","onUnsubscribe","hasListeners","getCurrentResult","build","R","isPending","isSuccess","isError","isIdle","notifyManager","listeners","listener","React","result","subscribe","batchCalls","onStoreChange","catch","noop","shouldThrowError","throwOnError","mutateAsync"],"sourceRoot":""}