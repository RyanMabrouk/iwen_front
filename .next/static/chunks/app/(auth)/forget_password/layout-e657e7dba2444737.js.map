{"version":3,"file":"static/chunks/app/(auth)/forget_password/layout-e657e7dba2444737.js","mappings":"4aAAAA,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,IAAA,CAAAD,EAAA,2ICOA,IAAME,EAAiBC,CAAAA,EAAAA,EAAAA,aAAAA,EAA8CC,KAAAA,GAC9D,SAASC,EAAgBC,CAI/B,KAJ+B,CAC9BC,SAAAA,CAAQ,CAGT,CAJ+BD,EAKxB,CAACE,EAAUC,EAAY,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IA0BzC,MAzBAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMC,EAAoBC,aAAaC,OAAO,CAAC,kBACzCC,EAAcC,KAAKC,GAAG,GACxBL,EAEFH,EADsBS,KAAKC,GAAG,CAAC,EAAGD,KAAKE,KAAK,CAAC,CAACC,SAAST,GAAqBG,CAAAA,EAAe,QAI3FN,EADwB,IAExBI,aAAaS,OAAO,CAAC,iBAAkB,CAACP,EAAcQ,GAAkB,EAAMC,QAAQ,IAE1F,EAAG,EAAE,EACLb,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMc,EAAQC,YAAY,KACxBjB,EAAYkB,IACV,GAAIA,EAAe,EAAG,CACpB,IAAMC,EAAcD,EAAe,EAEnC,OADAd,aAAaS,OAAO,CAAC,iBAAkB,CAACN,KAAKC,GAAG,GAAKW,IAAAA,CAAc,EAAMJ,QAAQ,IAC1EI,CACT,CACA,OAAO,CACT,EACF,EAAG,KACH,MAAO,IAAMC,cAAcJ,EAC7B,EAAG,EAAE,EACE,GAAAK,EAAAC,GAAA,EAAC7B,EAAe8B,QAAQ,EAACC,MAAO,CACrCC,QAAS1B,EACT2B,WAAY1B,CACd,EAAG2B,sBAAoB,UAAUC,wBAAsB,kBAAkBC,0BAAwB,+BAC5F/B,GAEP,CACO,SAASgC,IACd,IAAMC,EAAUC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWvC,GAC3B,GAAI,CAACsC,EACH,MAAM,MAAU,iDAElB,MAAO,CACLN,QAASM,EAAQN,OAAO,CACxBC,WAAYK,EAAQL,UAAU,CAElC","sources":["webpack://_N_E/?c772","webpack://_N_E/./src/provider/auth/CounterProvider.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"CounterProvider\"] */ \"/Users/macmini/Sites/iwan/iwen_front/src/provider/auth/CounterProvider.tsx\");\n","\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\ntype CounterContextType = {\n  counter: number;\n  setCounter: React.Dispatch<React.SetStateAction<number>>;\n};\nconst CounterContext = createContext<CounterContextType | undefined>(undefined);\nexport function CounterProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const [cooldown, setCooldown] = useState(60);\n  useEffect(() => {\n    const storedCooldownEnd = localStorage.getItem(\"otpCooldownEnd\");\n    const currentTime = Date.now();\n    if (storedCooldownEnd) {\n      const remainingTime = Math.max(0, Math.floor((parseInt(storedCooldownEnd) - currentTime) / 1000));\n      setCooldown(remainingTime);\n    } else {\n      const initialCooldown = 60;\n      setCooldown(initialCooldown);\n      localStorage.setItem(\"otpCooldownEnd\", (currentTime + initialCooldown * 1000).toString());\n    }\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCooldown(prevCooldown => {\n        if (prevCooldown > 0) {\n          const newCooldown = prevCooldown - 1;\n          localStorage.setItem(\"otpCooldownEnd\", (Date.now() + newCooldown * 1000).toString());\n          return newCooldown;\n        }\n        return 0;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  return <CounterContext.Provider value={{\n    counter: cooldown,\n    setCounter: setCooldown\n  }} data-sentry-element=\"unknown\" data-sentry-component=\"CounterProvider\" data-sentry-source-file=\"CounterProvider.tsx\">\n      {children}\n    </CounterContext.Provider>;\n}\nexport function useCounter() {\n  const context = useContext(CounterContext);\n  if (!context) {\n    throw new Error(\"useCounter must be used within a PageProvider\");\n  }\n  return {\n    counter: context.counter!!,\n    setCounter: context.setCounter!!\n  };\n}"],"names":["Promise","resolve","then","__webpack_require__","bind","CounterContext","createContext","undefined","CounterProvider","param","children","cooldown","setCooldown","useState","useEffect","storedCooldownEnd","localStorage","getItem","currentTime","Date","now","Math","max","floor","parseInt","setItem","initialCooldown","toString","timer","setInterval","prevCooldown","newCooldown","clearInterval","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Provider","value","counter","setCounter","data-sentry-element","data-sentry-component","data-sentry-source-file","useCounter","context","useContext"],"sourceRoot":""}