{"version":3,"file":"static/chunks/781-bfed4c721d857db7.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/focusManager.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/notifyManager.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/onlineManager.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/removable.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/retryer.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/subscribable.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/thenable.js","webpack://_N_E/./node_modules/.pnpm/@tanstack+query-core@5.62.2/node_modules/@tanstack/query-core/build/modern/utils.js","webpack://_N_E/../../src/QueryClientProvider.tsx","webpack://_N_E/./node_modules/.pnpm/@tanstack+react-query@5.62.2_react@18.3.1/node_modules/@tanstack/react-query/build/modern/utils.js","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://_N_E/./node_modules/.pnpm/motion-utils@11.13.0/node_modules/motion-utils/dist/es/noop.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/back.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://_N_E/./node_modules/.pnpm/motion-utils@11.13.0/node_modules/motion-utils/dist/es/errors.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/array.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://_N_E/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://_N_E/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://_N_E/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://_N_E/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://_N_E/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/store.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs"],"sourcesContent":["// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = (cb) => setTimeout(cb, 0);\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.13.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../utils/resolve-elements.mjs';\nimport { isDragActive } from './drag/state/is-active.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    resolveElements(elementOrSelector).forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return () => gestureAbortController.abort();\n}\n\nexport { hover };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","export { hover } from './gestures/hover.mjs';\nexport { resolveElements } from './utils/resolve-elements.mjs';\nexport { isDragActive, isDragging } from './gestures/drag/state/is-active.mjs';\nexport { setDragLock } from './gestures/drag/state/set-active.mjs';\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, isActive) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", isActive);\n    }\n    const callback = props[isActive ? \"onHoverStart\" : \"onHoverEnd\"];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current, props } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, true);\n            return (endEvent) => handleHoverEvent(this.node, endEvent, false);\n        }, { passive: !props.onHoverStart && !props.onHoverEnd });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from 'motion-dom';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.13.1\", `Attempting to mix Motion versions ${nextValue.version} with 11.13.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n"],"names":["focusManager","_subscribable_js__WEBPACK_IMPORTED_MODULE_0__","l","focused","cleanup","setup","_utils_js__WEBPACK_IMPORTED_MODULE_1__","sk","window","addEventListener","listener","onFocus","removeEventListener","onSubscribe","setEventListener","onUnsubscribe","hasListeners","setFocused","isFocused","listeners","forEach","globalThis","document","visibilityState","notifyManager","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","setTimeout","cb","schedule","push","flush","originalQueue","length","batch","result","batchCalls","args","setNotifyFunction","fn","setBatchNotifyFunction","setScheduler","onlineManager","online","onlineListener","onOnline","offlineListener","setOnline","bind","isOnline","Removable","gcTimeout","destroy","clearGcTimeout","scheduleGc","_utils_js__WEBPACK_IMPORTED_MODULE_0__","PN","gcTime","optionalRemove","updateGcTime","newGcTime","Math","max","Infinity","clearTimeout","defaultRetryDelay","failureCount","min","canFetch","networkMode","_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__","N","CancelledError","Error","constructor","options","revert","silent","isCancelledError","value","createRetryer","config","continueFn","isRetryCancelled","isResolved","thenable","_thenable_js__WEBPACK_IMPORTED_MODULE_1__","O","canContinue","_focusManager_js__WEBPACK_IMPORTED_MODULE_2__","j","canRun","canStart","resolve","onSuccess","reject","onError","pause","Promise","continueResolve","onPause","then","onContinue","run","promiseOrValue","initialPromise","error","catch","retry","_utils_js__WEBPACK_IMPORTED_MODULE_3__","retryDelay","delay","shouldRetry","onFail","_v","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","Subscribable","Set","subscribe","add","delete","size","pendingThenable","_resolve","_reject","finalize","data","Object","assign","status","reason","isServer","noop","functionalUpdate","updater","input","isValidTimeout","timeUntilStale","updatedAt","staleTime","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","partialMatchKey","isActive","isStale","state","matchMutation","mutation","mutationKey","hashKey","hashFn","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","keys","sort","reduce","key","a","b","some","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","equalItems","i","includes","shallowEqualObjects","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","sleep","timeout","replaceData","prevData","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","QueryClientContext","React","useQueryClient","client","queryClient","QueryClientProvider","children","param","mount","unmount","jsx","Provider","shouldThrowError","throwError","params","isAnimationControls","v","isKeyframesTarget","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","values","get","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","time_conversion_secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","target","sqrt","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","has","startsWith","getValueTransition","transition","MotionGlobalConfig","skipAnimations","useManualTiming","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","createRenderStep","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","keepAlive","immediate","addToCurrentFrame","process","frameData","clear","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","wake","frame_frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","binarySubdivide","x","lowerBound","upperBound","currentX","currentT","abs","aX","mirrorEasing","p","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","clamp","number","parse","parseFloat","transform","alpha","scale","default","createUnitType","endsWith","unit","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","match","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","element","transformsToRestore","Map","removedTransforms","removeNonTranslationalTransform","getValue","set","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","splitColor","aName","bName","cName","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","var","types","tokenised","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","join","type_int_int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","animatable_none_getAnimatableNone","defaultValueType","invalidTemplates","DOMKeyframesResolver","keyframe","resolved","getVariableValue","depth","invariant","fallback","parseCSSVariable","exec","token1","token2","getComputedStyle","getPropertyValue","trimmed","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","makeNoneKeyframesAnimatable","animatableTemplate","noneIndex","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","currentFinishedPromise","flatten","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","calcGeneratorVelocity","resolveValue","frameDuration","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","calcAngularFreq","undampedFreq","dampingRatio","calcGeneratorDuration","generator","done","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","resolveSpring","isResolvedFromDuration","getSpringOptions","springOptions","root","PI","derived","findSpring","envelope","derivative","warning","exponentialDecay","safeMin","exp","e","d","approximateRoot","initialGuess","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","timeReachedBoundary","spring$1","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isEasingArray","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","complex_mixNumber","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","matchOrder","orderedOrigin","pointers","originIndex","originValue","mix","mixer","keyframeValues","times","easingFunctions","mapTimeToKeyframe","interpolate","isClamp","inputLength","reverse","mixers","createMixers","customMixer","mixerFactory","numMixers","interpolator","progressInRange","offset","defaultOffset","arr","fillOffset","remaining","offsetProgress","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","keyframes$1","mapPercentToKeyframes","mirroredGenerator","generatorFactory","resolvedDuration","totalDuration","play","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","supportsLinearEasing","memoSupports","supportsFlag","memoized","createElement","animate","cubicBezierAsString","supportedWaapiEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","isWaapiSupportedEasing","every","pregeneratedAnimation","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","startWaapiAnimation","valueName","keyframeOptions","mapEasingToNativeEasing","segmentEasing","iterations","direction","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","shouldSkip","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","isFloat","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","isMotionValue","addValueToWillChange","willChange","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","hasValue","addValue","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","child","first","last","sortNodePosition","numVariantProps","reversePriorityOrder","numAnimationTypes","createTypeState","prevResolvedValues","createState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","AnimationFeature","createAnimationState","animateVisualElement","resolvedDefinition","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","context","getVariantContext","isControllingVariants","parent","initial","prop","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","liveStyle","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevProps","id","ExitAnimationFeature","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","filterEvents","event","pointerType","isPrimaryPointer","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerInfo","addDomEvent","passive","addPointerEvent","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","distance2D","xDelta","yDelta","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformBoxPoints","topLeft","bottomRight","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","lockThreshold","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","rebaseAxisConstraints","relativeConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measurePageBox","rootProjectionNode","viewportBox","scroll","measuredConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","calcOrigin","sourceLength","targetLength","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","asyncHandler","PanGesture","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","isValidProp","preloadedFeatures","createVisualElement","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","frame","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","react","useContext","PresenceContext_PresenceContext","useId","useEffect","useCallback","applyTo","boxShadow","treeScale","projectionDelta","shadow","xScale","yScale","averageScale","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","relativeProgress","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","create_projection_node_id","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","hasCheckedOptimisedAppear","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","MotionCancelOptimisedAnimation","cancelTreeOptimisedTransformAnimations","projectionNode","MotionHasOptimisedAnimation","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","applyTreeDeltas","treePath","isSharedTransition","treeLength","display","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","prevRelativeTarget","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","snapshotSource","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","mixValues","follow","opacityExit","borderLabel","followRadius","leadRadius","animateSingleValue","motionValue$1","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","string","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","handleHoverEvent","HoverGesture","hover","elementOrSelector","onHoverStart","gestureAbortController","AbortController","eventOptions","signal","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","resolveElements","scope","selectorCache","elements","querySelectorAll","endEvent","FocusGesture","isFocusVisible","matches","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","InViewFeature","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","observeIntersection","rootInteresectionObserver","initIntersectionObserver","lookupRoot","rootObservers","IntersectionObserver","observe","unobserve","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","isVariantNode","variantLabelsAsDependency","featureProps","focus","tap","pan","inView","featureDefinitions","isEnabled","motionComponentSymbol","for","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrape_motion_values_scrapeMotionValuesFromProps","charAt","makeUseVisualState","make","makeState","createRenderState","onMount","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","inherit","isInitialAnimationBlocked","variantToSet","list","useConstant","useRef","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","buildTransform","transformString","transformIsDefault","valueIsDefault","transformName","transform_origin_calcOrigin","dashKeys","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","pxOriginX","pxOriginY","buildSVGPath","spacing","useDashCase","tag","svgMotionConfig","useVisualState","getBBox","htmlMotionConfig","copyRawValuesOnly","validMotionProps","isValidMotionProp","shouldForward","require","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","findValueType","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","initPrefersReducedMotion","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","feature","removeSyncCheck","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","updateMotionValuesFromProps","nextValue","prevValue","existingValue","removeValue","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","_target","ProjectionNode","allowProjection","Fragment","forwardMotionProps","createRendererMotionComponent","useRender","loadFeatures","ForwardRefMotionComponent","forwardRef","externalRef","configAndProps","useLayoutId","layoutGroupId","useCreateMotionContext","getCurrentTreeVariants","useMemo","layoutProjection","getProjectionFunctionality","combined","useVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","use_visual_element_createProjectionNode","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","MotionHandoffMarkAsComplete","jsxs","createUseRender","visualProps","useVisualProps","_isStatic","rawStyles","htmlProps","useStyle","useInitialMotionValues","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","filteredProps","filterProps","isDom","elementProps","renderedChildren"],"sourceRoot":""}