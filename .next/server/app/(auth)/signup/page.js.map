{"version":3,"file":"../app/(auth)/signup/page.js","mappings":"6ZAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,uFCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,wFCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,kGCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,kFCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,sCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,iCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,wCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,iCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,8CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,iCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,6BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,+BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,gCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,iCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,8BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,6BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,+BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,qCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,kCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,mCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,iCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,8BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,8BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,8BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,8BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,yCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,+BCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,6CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,mDCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,kCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,oCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,qCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,yCCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,mCCAAF,CAA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","sources":["webpack://iwan-front/external commonjs \"next/dist/client/components/action-async-storage.external.js\"","webpack://iwan-front/external commonjs \"next/dist/client/components/request-async-storage.external.js\"","webpack://iwan-front/external commonjs \"next/dist/client/components/static-generation-async-storage.external.js\"","webpack://iwan-front/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://iwan-front/external commonjs2 \"async_hooks\"","webpack://iwan-front/external commonjs2 \"buffer\"","webpack://iwan-front/external commonjs2 \"child_process\"","webpack://iwan-front/external commonjs2 \"crypto\"","webpack://iwan-front/external commonjs2 \"diagnostics_channel\"","webpack://iwan-front/external commonjs2 \"events\"","webpack://iwan-front/external commonjs2 \"fs\"","webpack://iwan-front/external commonjs2 \"http\"","webpack://iwan-front/external commonjs2 \"https\"","webpack://iwan-front/external commonjs2 \"module\"","webpack://iwan-front/external commonjs2 \"net\"","webpack://iwan-front/external commonjs2 \"os\"","webpack://iwan-front/external commonjs2 \"path\"","webpack://iwan-front/external commonjs2 \"perf_hooks\"","webpack://iwan-front/external commonjs2 \"process\"","webpack://iwan-front/external commonjs2 \"punycode\"","webpack://iwan-front/external commonjs2 \"stream\"","webpack://iwan-front/external commonjs2 \"tls\"","webpack://iwan-front/external commonjs2 \"tty\"","webpack://iwan-front/external commonjs2 \"url\"","webpack://iwan-front/external commonjs2 \"util\"","webpack://iwan-front/external commonjs2 \"worker_threads\"","webpack://iwan-front/external commonjs2 \"zlib\"","webpack://iwan-front/external node-commonjs \"node:child_process\"","webpack://iwan-front/external node-commonjs \"node:diagnostics_channel\"","webpack://iwan-front/external node-commonjs \"node:fs\"","webpack://iwan-front/external node-commonjs \"node:http\"","webpack://iwan-front/external node-commonjs \"node:https\"","webpack://iwan-front/external node-commonjs \"node:inspector\"","webpack://iwan-front/external node-commonjs \"node:net\"","webpack://iwan-front/external node-commonjs \"node:os\"","webpack://iwan-front/external node-commonjs \"node:path\"","webpack://iwan-front/external node-commonjs \"node:readline\"","webpack://iwan-front/external node-commonjs \"node:stream\"","webpack://iwan-front/external node-commonjs \"node:tls\"","webpack://iwan-front/external node-commonjs \"node:util\"","webpack://iwan-front/external node-commonjs \"node:worker_threads\"","webpack://iwan-front/external node-commonjs \"node:zlib\"","webpack://iwan-front/src/app/(auth)/signup/page.tsx","webpack://iwan-front/sentry-wrapper-module","webpack://iwan-front/?0eba","webpack://iwan-front/?7e0e","webpack://iwan-front/?5a0e","webpack://iwan-front/./src/app/(auth)/handlers/auth/handleSignUp.ts","webpack://iwan-front/./src/hooks/auth/useSignUp.ts","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://iwan-front/./node_modules/.pnpm/motion-utils@11.13.0/node_modules/motion-utils/dist/es/noop.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/back.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://iwan-front/./node_modules/.pnpm/motion-utils@11.13.0/node_modules/motion-utils/dist/es/errors.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/array.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://iwan-front/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://iwan-front/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://iwan-front/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://iwan-front/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://iwan-front/./node_modules/.pnpm/motion-dom@11.13.0/node_modules/motion-dom/dist/es/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/store.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://iwan-front/./node_modules/.pnpm/framer-motion@11.13.1_react-dom@18.3.1_react@18.3.1/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://iwan-front/./src/app/(auth)/signup/ui/AnimatedCorrectIcon.tsx","webpack://iwan-front/./src/app/(auth)/signup/ui/SignupForm.tsx","webpack://iwan-front/./src/actions/auth/signup.ts"],"sourcesContent":["module.exports = require(\"next/dist/client/components/action-async-storage.external.js\");","module.exports = require(\"next/dist/client/components/request-async-storage.external.js\");","module.exports = require(\"next/dist/client/components/static-generation-async-storage.external.js\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"async_hooks\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"module\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"process\");","module.exports = require(\"punycode\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"node:child_process\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:http\");","module.exports = require(\"node:https\");","module.exports = require(\"node:inspector\");","module.exports = require(\"node:net\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path\");","module.exports = require(\"node:readline\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:util\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:zlib\");","import SignUpForm from \"./ui/SignupForm\";\nexport default async function Page() {\n  return <SignUpForm data-sentry-element=\"SignUpForm\" data-sentry-component=\"Page\" data-sentry-source-file=\"page.tsx\" />;\n}","import { _nullishCoalesce, _optionalChain } from '@sentry/core';\nimport * as Sentry from '@sentry/nextjs';\nimport * as origModule from 'next/dist/client/components/request-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nconst serverComponent = serverComponentModule.default;\n\nlet wrappedServerComponent;\nif (typeof serverComponent === 'function') {\n  // For some odd Next.js magic reason, `headers()` will not work if used inside `wrapServerComponentsWithSentry`.\n  // Current assumption is that Next.js applies some loader magic to userfiles, but not files in node_modules. This file\n  // is technically a userfile so it gets the loader magic applied.\n  wrappedServerComponent = new Proxy(serverComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      let sentryTraceHeader = undefined;\n      let baggageHeader = undefined;\n      let headers = undefined;\n\n      // We try-catch here just in `requestAsyncStorage` is undefined since it may not be defined\n      try {\n        const requestAsyncStore = _optionalChain([requestAsyncStorage, 'optionalAccess', _ => _.getStore, 'call', _2 => _2()]) ;\n        sentryTraceHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _3 => _3.headers, 'access', _4 => _4.get, 'call', _5 => _5('sentry-trace')]), () => ( undefined));\n        baggageHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _6 => _6.headers, 'access', _7 => _7.get, 'call', _8 => _8('baggage')]), () => ( undefined));\n        headers = _optionalChain([requestAsyncStore, 'optionalAccess', _9 => _9.headers]);\n      } catch (e) {\n        /** empty */\n      }\n\n      return Sentry.wrapServerComponentWithSentry(originalFunction, {\n        componentRoute: '/(auth)/signup',\n        componentType: 'Page',\n        sentryTraceHeader,\n        baggageHeader,\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n} else {\n  wrappedServerComponent = serverComponent;\n}\n\nconst generateMetadata = serverComponentModule.generateMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateMetadata, {\n      componentRoute: '/(auth)/signup',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateImageMetadata = serverComponentModule.generateImageMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateImageMetadata, {\n      componentRoute: '/(auth)/signup',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateImageMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateViewport = serverComponentModule.generateViewport\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateViewport, {\n      componentRoute: '/(auth)/signup',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateViewport',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst wrappedServerComponent$1 = wrappedServerComponent;\n\nexport { wrappedServerComponent$1 as default, generateImageMetadata, generateMetadata, generateViewport };\n","import \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/signup/page.tsx\";\nimport \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/layout.tsx\";\nimport \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/loading.tsx\";\nimport \"/Users/macmini/Sites/iwan/iwen_front/src/app/layout.tsx\";\nimport \"/Users/macmini/Sites/iwan/iwen_front/src/app/error.tsx\";\nimport \"/Users/macmini/Sites/iwan/iwen_front/src/app/loading.tsx\";\nimport \"/Users/macmini/Sites/iwan/iwen_front/src/app/not-found.tsx\";\"TURBOPACK { transition: next-ssr }\";\nimport { AppPageRouteModule } from \"next/dist/server/future/route-modules/app-page/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        '(auth)',\n        {\n        children: [\n        'signup',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/signup/page.tsx\"), \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/signup/page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/layout.tsx\"), \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/layout.tsx\"],\n'loading': [() => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/loading.tsx\"), \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/loading.tsx\"],\n        \n      }\n      ]\n      },\n        {\n        'layout': [() => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/layout.tsx\"), \"/Users/macmini/Sites/iwan/iwen_front/src/app/layout.tsx\"],\n'error': [() => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/error.tsx\"), \"/Users/macmini/Sites/iwan/iwen_front/src/app/error.tsx\"],\n'loading': [() => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/loading.tsx\"), \"/Users/macmini/Sites/iwan/iwen_front/src/app/loading.tsx\"],\n'not-found': [() => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/not-found.tsx\"), \"/Users/macmini/Sites/iwan/iwen_front/src/app/not-found.tsx\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/signup/page.tsx\"];\nexport { tree, pages };\nexport { default as GlobalError } from \"/Users/macmini/Sites/iwan/iwen_front/src/app/global-error.tsx\";\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nexport const originalPathname = \"/(auth)/signup/page\";\nexport const __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\nexport * from \"next/dist/server/app-render/entry-base\";\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n    definition: {\n        kind: RouteKind.APP_PAGE,\n        page: \"/(auth)/signup/page\",\n        pathname: \"/signup\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map","\nconst actions = {\n'35c5fa1d3cdc7afd2b3e0b4a6f4895ec83964a76': () => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/actions/auth/signup.ts\").then(mod => mod[\"default\"]),\n'42d1d7de5af24c0bb87cd8f1a49c3320d0dadbb1': () => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/actions/auth/signInWithOAuth.ts\").then(mod => mod[\"default\"]),\n'e161e4585ecdbe0402b5e00afdca5e5e6b7888b3': () => import(/* webpackMode: \"eager\" */ \"/Users/macmini/Sites/iwan/iwen_front/src/translation/getTranslation.ts\").then(mod => mod[\"default\"]),\n}\n\nasync function endpoint(id, ...args) {\n  const action = await actions[id]()\n  return action.apply(null, args)\n}\n\n// Using CJS to avoid this to be tree-shaken away due to unused exports.\nmodule.exports = {\n  '35c5fa1d3cdc7afd2b3e0b4a6f4895ec83964a76': endpoint.bind(null, '35c5fa1d3cdc7afd2b3e0b4a6f4895ec83964a76'),\n  '42d1d7de5af24c0bb87cd8f1a49c3320d0dadbb1': endpoint.bind(null, '42d1d7de5af24c0bb87cd8f1a49c3320d0dadbb1'),\n  'e161e4585ecdbe0402b5e00afdca5e5e6b7888b3': endpoint.bind(null, 'e161e4585ecdbe0402b5e00afdca5e5e6b7888b3'),\n}\n","import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/macmini/Sites/iwan/iwen_front/src/app/(auth)/signup/ui/SignupForm.tsx\");\n","import signUp from \"@/actions/auth/signup\";\nimport { z } from \"zod\";\n\nconst signUpSchema = z.object({\n  email: z.string().email(\"عنوان البريد الإلكتروني غير صالح\"),\n  password: z.string().min(8, \"يجب أن تتكون كلمة المرور من 8 أحرف على الأقل\"),\n  // .regex(\n  //   /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[^A-Za-z0-9]).+$/,\n  //   \"يجب أن تحتوي كلمة المرور على حرف كبير واحد على الأقل، وحرف صغير واحد، ورقم واحد، وحرف خاص واحد\",\n  // )\n  name: z.string().min(2, \"يجب أن يتكون الاسم الأول من حرفين على الأقل\"),\n});\n\nexport default async function handleSignUp(formData: FormData) {\n  const { email, password, name, confirmPassword } = {\n    email: formData.get(\"email\"),\n    password: formData.get(\"password\"),\n    name: formData.get(\"name\"),\n    confirmPassword: formData.get(\"confirmPassword\"),\n  };\n  const validatedInput = signUpSchema.parse({ email, password, name });\n  if (password !== confirmPassword) {\n    throw new Error(\"كلمة المرور و تأكيدها غير متطابقين\");\n  }\n\n  const { error, data } = await signUp(validatedInput);\n  if (error) {\n    throw new Error(error.message);\n  }\n  return { data };\n}\n","import { useMutation } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/useToast\";\nimport handleSignUp from \"@/app/(auth)/handlers/auth/handleSignUp\";\n\nexport default function useSignUp(\n  setter: React.Dispatch<React.SetStateAction<boolean>>,\n) {\n  const { toast } = useToast();\n  return useMutation({\n    mutationFn: handleSignUp,\n    onSuccess: () => {\n      toast.success(\"تم إنشاء الحساب بنجاح\", \"success : \");\n      setter(true);\n    },\n    onError: (error: Error) => {\n      try {\n        const errorMessages = JSON.parse(error.message);\n        if (Array.isArray(errorMessages)) {\n          errorMessages.forEach((errorObj) => {\n            if (\n              errorObj &&\n              typeof errorObj === \"object\" &&\n              \"message\" in errorObj\n            ) {\n              toast.error(errorObj.message);\n            }\n          });\n        } else {\n          toast.error(error.message);\n        }\n      } catch (e) {\n        toast.error(error.message);\n      }\n    },\n  });\n}\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.13.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../utils/resolve-elements.mjs';\nimport { isDragActive } from './drag/state/is-active.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    resolveElements(elementOrSelector).forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return () => gestureAbortController.abort();\n}\n\nexport { hover };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","export { hover } from './gestures/hover.mjs';\nexport { resolveElements } from './utils/resolve-elements.mjs';\nexport { isDragActive, isDragging } from './gestures/drag/state/is-active.mjs';\nexport { setDragLock } from './gestures/drag/state/set-active.mjs';\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, isActive) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", isActive);\n    }\n    const callback = props[isActive ? \"onHoverStart\" : \"onHoverEnd\"];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current, props } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, true);\n            return (endEvent) => handleHoverEvent(this.node, endEvent, false);\n        }, { passive: !props.onHoverStart && !props.onHoverEnd });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from 'motion-dom';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.13.1\", `Attempting to mix Motion versions ${nextValue.version} with 11.13.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport Image from \"next/image\";\ninterface AnimatedCorrectIconProps {\n  src: string;\n  alt: string;\n}\nconst AnimatedCorrectIcon: React.FC<AnimatedCorrectIconProps> = ({\n  src,\n  alt\n}) => {\n  const iconVariants = {\n    hidden: {\n      opacity: 0,\n      scale: 0.1,\n      rotate: -540,\n      y: 100\n    },\n    visible: {\n      opacity: 1,\n      scale: 1,\n      rotate: 0,\n      y: 0,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n        times: [0, 0.3, 0.6, 1],\n        opacity: {\n          duration: 0.2\n        },\n        scale: {\n          duration: 0.4\n        },\n        rotate: {\n          duration: 0.6,\n          ease: \"easeInOut\"\n        },\n        y: {\n          duration: 0.4,\n          ease: \"easeOut\"\n        }\n      }\n    }\n  };\n  return <motion.div initial=\"hidden\" animate=\"visible\" variants={iconVariants} data-sentry-element=\"unknown\" data-sentry-component=\"AnimatedCorrectIcon\" data-sentry-source-file=\"AnimatedCorrectIcon.tsx\">\n      <Image className=\"m-6\" src={src} alt={alt} width={100} height={100} data-sentry-element=\"Image\" data-sentry-source-file=\"AnimatedCorrectIcon.tsx\" />\n    </motion.div>;\n};\nexport default AnimatedCorrectIcon;","\"use client\";\n\nimport Image from \"next/image\";\nimport React, { useState } from \"react\";\nimport useSignUp from \"../../../../hooks/auth/useSignUp\";\nimport Link from \"next/link\";\nimport AnimatedCorrectIcon from \"./AnimatedCorrectIcon\";\nexport default function SignUpForm() {\n  const [accountCreated, setAccountCreated] = useState<boolean>(false);\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [focusedField, setFocusedField] = useState<string | null>(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const {\n    mutate: signUp\n  } = useSignUp(setAccountCreated);\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormState(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    signUp(formData);\n  };\n  const renderInput = (label: string, name: string, type: string, icon: string, placeholder: string, showPasswordToggle = false) => <>\n      <label htmlFor={name}>{label}*</label>\n      <div className={`flex w-full justify-end gap-2 rounded-md border p-2 transition-all duration-300 ${focusedField === name ? \"border-emerald-700\" : \"\"}`}>\n        {showPasswordToggle && <button type=\"button\" onClick={() => name === \"password\" ? setShowPassword(!showPassword) : setShowConfirmPassword(!showConfirmPassword)} aria-label={`${showPassword ? \"Hide\" : \"Show\"} password`}>\n            {name === \"password\" ? showPassword ? <Image width={20} height={20} src=\"/auth/eye.svg\" className=\"opacity-90\" alt=\"Toggle password visibility\" /> : <Image width={20} height={20} src=\"/auth/eye-crossed.svg\" className=\"opacity-40\" alt=\"Toggle password visibility\" /> : showConfirmPassword ? <Image width={20} height={20} src=\"/auth/eye.svg\" className=\"opacity-90\" alt=\"Toggle password visibility\" /> : <Image width={20} height={20} src=\"/auth/eye-crossed.svg\" className=\"opacity-40\" alt=\"Toggle password visibility\" />}\n          </button>}\n        <div className=\"flex flex-1 items-center justify-end gap-2\">\n          <input id={name} name={name} placeholder={placeholder} className=\"h-[20px] flex-1 outline-none\" type={showPasswordToggle ? name === \"password\" ? showPassword ? \"text\" : \"password\" : showConfirmPassword ? \"text\" : \"password\" : type} dir=\"rtl\" value={formState[name as keyof typeof formState]} onChange={handleInputChange} onFocus={() => setFocusedField(name)} onBlur={() => setFocusedField(null)} required />\n          <Image width={20} height={20} src={icon} alt={`${name} icon`} data-sentry-element=\"Image\" data-sentry-source-file=\"SignupForm.tsx\" />\n        </div>\n      </div>\n    </>;\n  if (!accountCreated) return <form onSubmit={handleSubmit} className=\"flex h-full w-full flex-col items-end gap-1\">\n        {renderInput(\"الإسم\", \"name\", \"text\", \"/auth/Profile.svg\", \"الإسم الكامل\")}\n        {renderInput(\"البريد إلكتروني\", \"email\", \"email\", \"/auth/envelope.svg\", \" البريد الإلكتروني\")}\n        {renderInput(\"كلمة المرور\", \"password\", \"password\", \"/auth/unlock.svg\", \" أدخل كلمة المرور\", true)}\n        {renderInput(\"التأكد من كلمة المرور\", \"confirmPassword\", \"password\", \"/auth/unlock.svg\", \"أعد إدخال كلمة المرور\", true)}\n        <button type=\"submit\" style={{\n      background: \"#27A098\"\n    }} className=\"text-md mt-5 w-full rounded-md p-3 text-center font-semibold text-white\">\n          إنشاء حساب\n        </button>\n      </form>;else return <div className=\"flex w-full flex-col items-center p-5\">\n        <AnimatedCorrectIcon src=\"/auth/correct.svg\" alt=\"Correct icon\" />\n        <h1 className=\"text-xl\">تهانينا !</h1>\n        <p className=\"text-center text-2xl font-semibold\">\n          تهانينا ! تم إنشاء حسابك بنجاح\n        </p>\n        <Link href=\"/home\" style={{\n      background: \"#27A098\"\n    }} className=\"text-md mt-10 w-full rounded-md p-3 text-center font-semibold text-white\">\n          تسجيل الدخول\n        </Link>\n      </div>;\n}","\"use server\";\nimport { createClient } from \"@/lib/supabase\";\nimport { headers } from \"next/headers\";\nimport { AuthResponse } from \"@supabase/supabase-js\";\n\nexport default async function signUp({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}): Promise<{\n  data: AuthResponse[\"data\"] | null;\n  error: { message: string; type: string } | null;\n}> {\n  const headersList = headers();\n  const header_url = headersList.get(\"host\") || \"\";\n  const proto = headersList.get(\"x-forwarded-proto\") || \"http\";\n\n  const supabase = createClient();\n  const { data, error: signUpErr } = await supabase.auth.signUp({\n    email: email,\n    password: password,\n    options: {\n      emailRedirectTo: `${proto}://${header_url}/auth/callback`,\n    },\n  });\n  if (signUpErr) {\n    console.log(\"🚀 ~ signUpErr:\", signUpErr)\n    return {\n      data: null,\n      error: {\n        message: \"حدث خطأ أثناء انشاء الحساب\",\n        type: \"SignUp Error\",\n      },\n    };\n  }\n  if (data?.user?.identities?.length === 0) {\n    return {\n      data: null,\n      error: {\n        message: \"هذا الحساب موجود بالفعل\",\n        type: \"SignUp Error\",\n      },\n    };\n  }\n  return { data, error: null };\n}\n"],"names":["module","exports","require","wrappedServerComponent","Page","_jsx","SignUpForm","data-sentry-element","data-sentry-component","data-sentry-source-file","asyncStorageModule","request_async_storage_external_js_","requestAsyncStorage","workUnitAsyncStorage","undefined","Proxy","serverComponentModule.default","apply","originalFunction","thisArg","args","sentryTraceHeader","baggageHeader","headers","requestAsyncStore","_optionalChain","x","_","getStore","_2","_nullishCoalesce","h","_3","_4","get","_5","_6","_7","_8","_9","e","index_server","wrapServerComponentWithSentry","componentRoute","componentType","generateMetadata","generateImageMetadata","generateViewport","wrappedServerComponent$1","tree","children","page","Promise","resolve","then","__webpack_require__","bind","pages","originalPathname","__next_app__","loadChunk","routeModule","next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_7__","AppPageRouteModule","definition","kind","next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_8__","APP_PAGE","pathname","bundlePath","filename","appPaths","userland","loaderTree","actions","mod","endpoint","id","action","now","preloadedFeatures","createVisualElement","signUpSchema","z","object","email","string","password","min","name","handleSignUp","formData","confirmPassword","validatedInput","parse","error","data","signUp","message","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","key","getVelocity","resolveVariantFromProps","props","custom","current","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","time_conversion_secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","criticallyDampedSpring","target","Math","sqrt","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","has","startsWith","getValueTransition","transition","MotionGlobalConfig","skipAnimations","useManualTiming","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","createRenderStep","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","addToCurrentFrame","add","cancel","delete","process","frameData","clear","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","max","wake","frame_frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","binarySubdivide","lowerBound","upperBound","currentX","currentT","abs","aX","mirrorEasing","p","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","clamp","number","parseFloat","transform","alpha","scale","default","createUnitType","endsWith","unit","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","match","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","element","transformsToRestore","Map","removedTransforms","removeNonTranslationalTransform","getValue","push","set","measureInitialState","restore","_a","measureEndState","suspendedScrollY","window","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","tokenised","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","type_int_int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","animatable_none_getAnimatableNone","defaultValueType","invalidTemplates","DOMKeyframesResolver","keyframe","resolved","getVariableValue","depth","invariant","fallback","parseCSSVariable","exec","token1","token2","getComputedStyle","getPropertyValue","trimmed","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","makeNoneKeyframesAnimatable","animatableTemplate","noneIndex","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","flatten","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","calcGeneratorVelocity","resolveValue","frameDuration","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","calcAngularFreq","undampedFreq","dampingRatio","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","resolveSpring","isResolvedFromDuration","getSpringOptions","springOptions","root","PI","derived","findSpring","envelope","derivative","warning","exponentialDecay","safeMin","exp","d","approximateRoot","initialGuess","result","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","timeReachedBoundary","spring$1","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isEasingArray","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","complex_mixNumber","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","matchOrder","orderedOrigin","pointers","originIndex","originValue","mix","mixer","keyframeValues","times","easingFunctions","mapTimeToKeyframe","interpolate","input","isClamp","inputLength","reverse","mixers","createMixers","customMixer","mixerFactory","numMixers","interpolator","progressInRange","offset","defaultOffset","arr","fillOffset","remaining","offsetProgress","o","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","mapPercentToKeyframes","mirroredGenerator","generatorFactory","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","supportsLinearEasing","memoSupports","supportsFlag","memoized","document","createElement","animate","cubicBezierAsString","supportedWaapiEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","isWaapiSupportedEasing","every","pregeneratedAnimation","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","startWaapiAnimation","valueName","keyframeOptions","mapEasingToNativeEasing","segmentEasing","iterations","direction","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","shouldSkip","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","isFloat","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","isMotionValue","addValueToWillChange","willChange","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","hasValue","addValue","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","first","last","sortNodePosition","numVariantProps","reversePriorityOrder","numAnimationTypes","createTypeState","isActive","prevResolvedValues","createState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","AnimationFeature","createAnimationState","animateVisualElement","resolvedDefinition","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","context","getVariantContext","isControllingVariants","parent","initial","prop","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","liveStyle","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","ExitAnimationFeature","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","filterEvents","event","pointerType","isPrimaryPointer","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerInfo","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","distance2D","xDelta","yDelta","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformBoxPoints","topLeft","bottomRight","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","lockThreshold","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","rebaseAxisConstraints","relativeConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measurePageBox","rootProjectionNode","viewportBox","scroll","measuredConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","calcOrigin","sourceLength","targetLength","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","asyncHandler","PanGesture","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","frame","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","react","useContext","PresenceContext_PresenceContext","useId","useEffect","useCallback","jsx","applyTo","boxShadow","treeScale","projectionDelta","shadow","xScale","yScale","averageScale","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","relativeProgress","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","create_projection_node_id","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","hasCheckedOptimisedAppear","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","MotionCancelOptimisedAnimation","cancelTreeOptimisedTransformAnimations","projectionNode","MotionHasOptimisedAnimation","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","applyTreeDeltas","treePath","isSharedTransition","treeLength","display","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","prevRelativeTarget","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","snapshotSource","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","mixValues","follow","opacityExit","borderLabel","followRadius","leadRadius","animateSingleValue","motionValue$1","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","includes","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","handleHoverEvent","HoverGesture","hover","elementOrSelector","onHoverStart","gestureAbortController","AbortController","eventOptions","signal","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","resolveElements","scope","selectorCache","elements","querySelectorAll","abort","endEvent","FocusGesture","onFocus","isFocusVisible","matches","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","InViewFeature","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","observeIntersection","rootInteresectionObserver","initIntersectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","observe","unobserve","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","isVariantNode","variantLabelsAsDependency","featureProps","focus","tap","pan","inView","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrape_motion_values_scrapeMotionValuesFromProps","charAt","makeUseVisualState","make","makeState","createRenderState","onMount","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","inherit","isInitialAnimationBlocked","variantToSet","list","useConstant","useRef","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","buildTransform","transformString","transformIsDefault","valueIsDefault","transformName","transform_origin_calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","pxOriginX","pxOriginY","buildSVGPath","spacing","useDashCase","tag","svgMotionConfig","useVisualState","getBBox","htmlMotionConfig","copyRawValuesOnly","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","findValueType","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","initPrefersReducedMotion","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","feature","removeSyncCheck","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","updateMotionValuesFromProps","nextValue","prevValue","existingValue","removeValue","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","createDOMMotionComponentProxy","componentFactory","componentCache","_target","ProjectionNode","allowProjection","Fragment","forwardMotionProps","createRendererMotionComponent","useRender","loadFeatures","ForwardRefMotionComponent","forwardRef","externalRef","configAndProps","useLayoutId","layoutGroupId","useCreateMotionContext","getCurrentTreeVariants","useMemo","layoutProjection","getProjectionFunctionality","combined","useVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","use_visual_element_createProjectionNode","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","MotionHandoffMarkAsComplete","jsxs","Provider","createUseRender","visualProps","useVisualProps","_isStatic","rawStyles","htmlProps","useStyle","useInitialMotionValues","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","filteredProps","filterProps","isDom","elementProps","renderedChildren","ui_AnimatedCorrectIcon","src","alt","react_jsx_runtime","div","hidden","visible","Image","className","accountCreated","setAccountCreated","useState","formState","setFormState","focusedField","setFocusedField","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","mutate","useSignUp","setter","toast","useToast","useMutation","mutationFn","onSuccess","success","onError","errorMessages","errorObj","handleInputChange","renderInput","icon","placeholder","showPasswordToggle","htmlFor","onClick","aria-label","dir","required","AnimatedCorrectIcon","h1","Link","href","background","form","onSubmit","preventDefault","FormData","currentTarget","headersList","header_url","proto","supabase","createClient","signUpErr","auth","emailRedirectTo","user","identities"],"sourceRoot":""}