{"version":3,"file":"3025.js","mappings":"0nBAWe,SAASA,IACtB,GAAM,CACJC,KAAMC,CAAI,CACX,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IACE,CAACC,EAAgBC,EAAkB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC/CC,EAAcC,CAAAA,EAAAA,EAAAA,MAAAA,EAAuB,MACrCC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IAKTC,EAAcC,CAAAA,EAAAA,EAAAA,cAAAA,IACd,CACJC,OAAQC,CAAW,CACpB,CAAGC,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,CACdC,WAAY,UACV,MAAMC,IACNZ,EAAkB,IAClB,MAAMM,EAAYO,iBAAiB,GACnCT,EAAOU,IAAI,CAAC,SACd,EACAC,QAASC,IAGT,CACF,UAqBA,GAAUpB,KACD,GAAAqB,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,WAAWC,IAAKnB,YAClCe,EAAAK,GAAA,CAACC,SAAAA,CAAOC,QAxCS,KACrBxB,EAAkB,CAACD,EACrB,EAsCuCqB,UAAU,sGACzCH,EAAAK,GAAA,CAACG,EAAAA,OAAKA,CAAAA,CAACL,UAAU,sBAAsBM,IAAK7B,EAAKD,IAAI,CAAC+B,MAAM,CAAG9B,EAAKD,IAAI,CAAC+B,MAAM,CAAG,sBAAuBC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,kBAErI/B,GAAkB,GAAAkB,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,sKAC9BH,EAAAK,GAAA,CAACS,EAAAA,OAAIA,CAAAA,CAACC,KAAK,WAAWR,QAAS,KACjCxB,EAAkB,GACpB,WACMiB,EAAAK,GAAA,CAACW,OAAAA,CAAKb,UAAU,yGAAgG,YAIlHH,EAAAK,GAAA,CAACC,SAAAA,CAAOC,QAjCG,KACnBf,GACF,EA+ByCW,UAAU,8GAAqG,eAMjJH,EAAAK,GAAA,CAACS,EAAAA,OAAIA,CAAAA,CAACC,KAAK,SAASE,sBAAoB,OAAOC,wBAAsB,oBAAoBC,0BAAwB,iCACpHnB,EAAAK,GAAA,CAACe,EAAAA,OAAaA,CAAAA,CAACjB,UAAU,uBAAuBkB,KAAK,KAAKJ,sBAAoB,gBAAgBE,0BAAwB,iCAAwB,gBAIpJ","sources":["webpack://iwan-front/./src/components/Header/HeaderLoginButton.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PrimaryButton from \"../main/buttons/PrimaryButton\";\nimport useCurrentUser from \"@/hooks/data/user/useCurrentUser\";\nimport Link from \"next/link\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport signOut from \"@/actions/auth/signout\";\nimport { useRouter } from \"next/navigation\"; // Client-side navigation\n\nexport default function HeaderLoginButton() {\n  const {\n    data: user\n  } = useCurrentUser();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const router = useRouter(); // Initialize router\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  const queryClient = useQueryClient();\n  const {\n    mutate: signOutUser\n  } = useMutation({\n    mutationFn: async () => {\n      await signOut();\n      setIsDropdownOpen(false);\n      await queryClient.invalidateQueries(); // Invalidate all queries\n      router.push(\"/login\"); // Client-side navigation\n    },\n    onError: error => {\n      // Optional: Handle sign-out errors here\n      console.error(\"Error signing out:\", error);\n    }\n  });\n  const handleLogout = () => {\n    signOutUser();\n  };\n  const handleClickOutside = (event: MouseEvent) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n      setIsDropdownOpen(false);\n    }\n  };\n  useEffect(() => {\n    if (window && document) {\n      if (isDropdownOpen) {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n      } else {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      }\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [isDropdownOpen]);\n  if (user?.data) {\n    return <div className=\"relative\" ref={dropdownRef}>\n        <button onClick={toggleDropdown} className=\"flex h-[3rem] w-fit min-w-[50px] items-center justify-center rounded-lg bg-white shadow-md\">\n          <Image className=\"h-[3rem] rounded-lg\" src={user.data.avatar ? user.data.avatar : \"/default_avatar.png\"} width={50} height={50} alt=\"User Avatar\" />\n        </button>\n        {isDropdownOpen && <div className=\"absolute right-0 z-[1000] mt-2 w-32 origin-top scale-100 transform rounded-md bg-white font-medium opacity-100 shadow-lg transition duration-200 ease-out\">\n            <Link href=\"/profile\" onClick={() => {\n          setIsDropdownOpen(false);\n        }}>\n              <span className=\"block w-full cursor-pointer rounded-t-md px-4 py-2 text-gray-800 transition hover:bg-gray-100\">\n                حسابي\n              </span>\n            </Link>\n            <button onClick={handleLogout} className=\"w-full cursor-pointer rounded-b-md px-4 py-2 text-right text-gray-800 transition hover:bg-gray-100\">\n              خروج\n            </button>\n          </div>}\n      </div>;\n  }\n  return <Link href=\"/login\" data-sentry-element=\"Link\" data-sentry-component=\"HeaderLoginButton\" data-sentry-source-file=\"HeaderLoginButton.tsx\">\n      <PrimaryButton className=\"w-full min-w-[150px]\" size=\"md\" data-sentry-element=\"PrimaryButton\" data-sentry-source-file=\"HeaderLoginButton.tsx\">\n        انشاء حساب\n      </PrimaryButton>\n    </Link>;\n}"],"names":["HeaderLoginButton","data","user","useCurrentUser","isDropdownOpen","setIsDropdownOpen","useState","dropdownRef","useRef","router","useRouter","queryClient","useQueryClient","mutate","signOutUser","useMutation","mutationFn","signOut","invalidateQueries","push","onError","error","react_jsx_runtime","jsxs","div","className","ref","jsx","button","onClick","Image","src","avatar","width","height","alt","Link","href","span","data-sentry-element","data-sentry-component","data-sentry-source-file","PrimaryButton","size"],"sourceRoot":""}